//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.05 at 04:46:29 AM CAT 
//


package qubed.corelogic;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for VacantLandEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="VacantLandEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AllVacantTypes"/>
 *     &lt;enumeration value="MarshLand"/>
 *     &lt;enumeration value="FloodPlain"/>
 *     &lt;enumeration value="BarrenLand"/>
 *     &lt;enumeration value="CommercialAcreage"/>
 *     &lt;enumeration value="CommercialLot"/>
 *     &lt;enumeration value="CommonLand"/>
 *     &lt;enumeration value="Desert"/>
 *     &lt;enumeration value="AgriculturalLand"/>
 *     &lt;enumeration value="IndustrialAcreage"/>
 *     &lt;enumeration value="IndustrialLot"/>
 *     &lt;enumeration value="MountainousLand"/>
 *     &lt;enumeration value="NaturalResources"/>
 *     &lt;enumeration value="MultiFamilyAcreage"/>
 *     &lt;enumeration value="ResidentialAcreage"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "VacantLandEnum", namespace = "http://globalgateway.corelogic.com/order/2015")
@XmlEnum
public enum VacantLandEnum {

    @XmlEnumValue("AllVacantTypes")
    ALL_VACANT_TYPES("AllVacantTypes"),
    @XmlEnumValue("MarshLand")
    MARSH_LAND("MarshLand"),
    @XmlEnumValue("FloodPlain")
    FLOOD_PLAIN("FloodPlain"),
    @XmlEnumValue("BarrenLand")
    BARREN_LAND("BarrenLand"),
    @XmlEnumValue("CommercialAcreage")
    COMMERCIAL_ACREAGE("CommercialAcreage"),
    @XmlEnumValue("CommercialLot")
    COMMERCIAL_LOT("CommercialLot"),
    @XmlEnumValue("CommonLand")
    COMMON_LAND("CommonLand"),
    @XmlEnumValue("Desert")
    DESERT("Desert"),
    @XmlEnumValue("AgriculturalLand")
    AGRICULTURAL_LAND("AgriculturalLand"),
    @XmlEnumValue("IndustrialAcreage")
    INDUSTRIAL_ACREAGE("IndustrialAcreage"),
    @XmlEnumValue("IndustrialLot")
    INDUSTRIAL_LOT("IndustrialLot"),
    @XmlEnumValue("MountainousLand")
    MOUNTAINOUS_LAND("MountainousLand"),
    @XmlEnumValue("NaturalResources")
    NATURAL_RESOURCES("NaturalResources"),
    @XmlEnumValue("MultiFamilyAcreage")
    MULTI_FAMILY_ACREAGE("MultiFamilyAcreage"),
    @XmlEnumValue("ResidentialAcreage")
    RESIDENTIAL_ACREAGE("ResidentialAcreage");
    private final String value;

    VacantLandEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VacantLandEnum fromValue(String v) {
        for (VacantLandEnum c: VacantLandEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
