//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.08.05 at 04:46:29 AM CAT 
//


package qubed.corelogic;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for eSignVendorNameEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="eSignVendorNameEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="docusign"/>
 *     &lt;enumeration value="docmagic"/>
 *     &lt;enumeration value="eLynx"/>
 *     &lt;enumeration value="ESSv6"/>
 *     &lt;enumeration value="IDS"/>
 *     &lt;enumeration value="docutech"/>
 *     &lt;enumeration value="echosign"/>
 *     &lt;enumeration value="Other"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "eSignVendorNameEnum", namespace = "http://globalgateway.corelogic.com/order/2015")
@XmlEnum
public enum ESignVendorNameEnum {

    @XmlEnumValue("docusign")
    DOCUSIGN("docusign"),
    @XmlEnumValue("docmagic")
    DOCMAGIC("docmagic"),
    @XmlEnumValue("eLynx")
    E_LYNX("eLynx"),
    @XmlEnumValue("ESSv6")
    ES_SV_6("ESSv6"),
    IDS("IDS"),
    @XmlEnumValue("docutech")
    DOCUTECH("docutech"),
    @XmlEnumValue("echosign")
    ECHOSIGN("echosign"),
    @XmlEnumValue("Other")
    OTHER("Other");
    private final String value;

    ESignVendorNameEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ESignVendorNameEnum fromValue(String v) {
        for (ESignVendorNameEnum c: ESignVendorNameEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
